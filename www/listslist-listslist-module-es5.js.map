{"version":3,"sources":["./src/app/listslist/listslist.page.html","./src/app/listslist/listslist-routing.module.ts","./src/app/listslist/listslist.module.ts","./src/app/listslist/listslist.page.scss","./src/app/listslist/listslist.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,gUAAgU,cAAc,oqBAAoqB,cAAc,4UAA4U,cAAc,yG;;;;;;;;;;;;;;;;;;;ACAjzC;AACc;AAEN;AAEjD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;AAMF;IAAA;IAAyC,CAAC;IAA7B,0BAA0B;QAJtC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,0BAA0B,CAAG;IAAD,iCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBE;AACM;AACF;AAEA;AAE2B;AAEvB;AACqB;AAYtE;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAV/B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,oFAA0B;gBAC1B,mFAAY;aACb;YACD,YAAY,EAAE,CAAC,6DAAa,CAAC;SAC9B,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;ACrBhC,+DAA+D,+I;;;;;;;;;;;;;;;;;;;ACAb;AAES;AACQ;AAOnE;IAME,uBAAoB,WAAuB,EAAU,IAAiB;QAAtE,iBAGC;QAHmB,gBAAW,GAAX,WAAW,CAAY;QAAU,SAAI,GAAJ,IAAI,CAAa;QACpE,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,SAAS,CAAC,cAAO,KAAI,CAAC,mBAAmB,EAAE,GAAC,CAAC,CAAC;QACnF,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,gCAAQ,GAAR;IACA,CAAC;IAED,2CAAmB,GAAnB;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,KAAK,GAAG,GAAG,EAAhB,CAAgB,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,cAAc,GAAG,GAAG,EAAzB,CAAyB,CAAC,CAAC;QACjF,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,WAAW,GAAG,GAAG,EAAtB,CAAsB,CAAC,CAAC;IAC7E,CAAC;IAED,8BAAM,GAAN,UAAO,IAAU;QACf,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;;gBAhBgC,wEAAU;gBAAgB,8EAAW;;IAN3D,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,mJAAoC;;SAErC,CAAC;+EAOiC,wEAAU,EAAgB,8EAAW;OAN3D,aAAa,CAwBzB;IAAD,oBAAC;CAAA;AAxByB","file":"listslist-listslist-module-es5.js","sourcesContent":["module.exports = \"<app-header [title]=\\\"'Available Lists'\\\"></app-header>\\n\\n<ion-content fullscreen>\\n  <br>\\n  <ion-title>My lists</ion-title>\\n  <ion-list>\\n    <ion-item-sliding *ngFor=\\\"let list of lists\\\">\\n      <ion-item ion-button [routerLink]=\\\"['/todoslist', list.id]\\\">\\n        <ion-label>\\n          <h2>{{ list.title }}</h2>\\n        </ion-label>\\n      </ion-item>\\n\\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(list)\\\">\\n          <ion-icon slot=\\\"top\\\" name=\\\"trash\\\"></ion-icon>\\n        </ion-item-option>\\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n  <section>\\n    <ion-button expand=\\\"block\\\" [routerLink]=\\\"['/add-list']\\\">Add a New list</ion-button>\\n  </section>\\n  <br>\\n  <ion-title>Lists shared - read only</ion-title>\\n  <ion-list>\\n    <ion-item-sliding *ngFor=\\\"let list of listsWatchOnly\\\">\\n      <ion-item ion-button [routerLink]=\\\"['/todoslist', list.id]\\\">\\n        <ion-label>\\n          <h2>{{ list.title }}</h2>\\n        </ion-label>\\n      </ion-item>\\n    </ion-item-sliding>\\n  </ion-list>\\n  <br>\\n  <ion-title>Lists shared - read and write</ion-title>\\n  <ion-list>\\n    <ion-item-sliding *ngFor=\\\"let list of listsShared\\\">\\n      <ion-item ion-button [routerLink]=\\\"['/todoslist', list.id]\\\">\\n        <ion-label>\\n          <h2>{{ list.title }}</h2>\\n        </ion-label>\\n      </ion-item>\\n    </ion-item-sliding>\\n  </ion-list>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListslistPage } from './listslist.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListslistPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListslistPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListslistPageRoutingModule } from './listslist-routing.module';\n\nimport { ListslistPage } from './listslist.page';\nimport {HeaderModule} from '../small-components/header/header.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListslistPageRoutingModule,\n    HeaderModule\n  ],\n  declarations: [ListslistPage]\n})\nexport class ListslistPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3RzbGlzdC9saXN0c2xpc3QucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {List} from '../model/todo';\nimport {CollecList} from '../services/collec-list.service';\nimport { AuthService } from '../services/authentification.service';\n\n@Component({\n  selector: 'app-listslist',\n  templateUrl: './listslist.page.html',\n  styleUrls: ['./listslist.page.scss'],\n})\nexport class ListslistPage implements OnInit {\n\n  private lists: Array<List>;\n  private listsWatchOnly: Array<List>;\n  private listsShared: Array<List>;\n\n  constructor(private listService: CollecList, private auth: AuthService) {\n    this.listService.getDatabaseReloaded.subscribe(() => {this.getListsFromService()});\n    this.getListsFromService();\n  }\n\n  ngOnInit(): void {\n  }\n\n  getListsFromService(){\n    this.listService.getLists().subscribe(res => this.lists = res);\n    this.listService.getListsWatchOnly().subscribe(res => this.listsWatchOnly = res);\n    this.listService.getListsShared().subscribe(res => this.listsShared = res);\n  }\n\n  delete(list: List){\n    this.listService.delete(list);\n  }\n\n}\n"],"sourceRoot":""}