{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts","./src/app/services/authentification.service.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<app-header [title]=\\\"'Log In'\\\"></app-header>\\n\\n<ion-content>\\n  <form  #form=\\\"ngForm\\\">\\n    <ion-grid>\\n      <ion-row color=\\\"primary\\\" justify-content-center>\\n        <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n          <div padding>\\n            <ion-item>\\n              <ion-input  name=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Email\\\" ngModel required #login></ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-input name=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ngModel required #motDePasse></ion-input>\\n            </ion-item>\\n          </div>\\n          <div padding>\\n            <ion-text color=\\\"danger\\\" *ngIf=\\\"!hideErrMessage\\\">{{errMessage}}</ion-text>\\n          </div>\\n          <div padding>\\n            <ion-button  size=\\\"large\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" expand=\\\"block\\\"  (click)=\\\"logIn(login.value,motDePasse.value)\\\">Log in</ion-button>\\n          </div>\\n          <div padding>\\n            <ion-button  size=\\\"large\\\" type=\\\"signin\\\" expand=\\\"block\\\" routerLink=\\\"/sign-up\\\">Sign up</ion-button>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { HeaderModule } from '../small-components/header/header.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    HeaderModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/authentification.service';\nimport {Router} from '@angular/router';\nimport { NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  private hideErrMessage: boolean;\n  private errMessage: String;\n  constructor(private authServ : AuthService, private router: Router, private navCtrl: NavController) {\n  }\n\n  ngOnInit() {\n    this.hideErrMessage=true;\n    this.errMessage = \"\";\n  }\n\n  logIn(log: string, mdp: string){\n    this.authServ.login(log, mdp).then(value =>\n      {\n      console.log('Nice, it worked!');\n      this.hideErrMessage = true;\n      this.router.navigate(['listslist']);\n    }).catch(err =>\n      {\n      console.log('Something went wrong:',err.message);\n      this.errMessage = err.message;\n      this.hideErrMessage = false;\n    });\n  }\n}\n","import { Injectable, Output, EventEmitter } from '@angular/core';\n\nimport * as firebase from 'firebase/app';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  @Output() getLoggedInName: EventEmitter<any> = new EventEmitter();\n\n  constructor(private router: Router) {\n  }\n\n  // signup(email: string, password: string) {\n  //   firebase\n  //       .auth()\n  //       .createUserWithEmailAndPassword(email, password)\n  //       .then(value => {\n  //         console.log('Success!', value);\n  //       })\n  //       .catch(err => {\n  //         console.log('Something went wrong:',err.message);\n  //       });\n  //   this.router.navigate(['/login']);\n  // }\n\n  signup(email: string, password: string): Promise<firebase.auth.UserCredential> {\n    return firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n  }\n\n  login(email: string, password: string): Promise<firebase.auth.UserCredential> {\n    return firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .finally(()=>{this.getLoggedInName.emit(this.getUsername())});\n  }\n\n  logout() {\n    firebase\n        .auth()\n        .signOut();\n    this.router.navigate(['/login']);\n  }\n\n  getUsername(){\n    return firebase.auth().currentUser?firebase.auth().currentUser.email:\"\";\n  }\n\n  getUserID(){\n    return firebase.auth().currentUser?firebase.auth().currentUser.uid:\"\";\n  }\n\n  isConnected(){\n    return firebase.auth().currentUser?true:false;\n  }\n\n}\n"],"sourceRoot":""}